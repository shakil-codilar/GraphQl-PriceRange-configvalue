#demo info graphql schema

type Query {
        brand: [Brand] @resolver(class: "Codilar\\GraphQlDemo\\Model\\Resolver\\BrandResolver") @doc(description: "Get Brand collection of a store")
        productsWithBrand (id: Int @doc(description: "Id of the  brand")): [ProductsWithBrand] @resolver(class: "Codilar\\GraphQlDemo\\Model\\Resolver\\ProductResolver") @doc(description: "The CMS page query returns information about a CMS page") @cache(cacheIdentity: "Magento\\CmsGraphQl\\Model\\Resolver\\Page\\Identity")
        collections (
                brand_id:Int
            ): Collections
            @resolver(class: "Codilar\\GraphQlDemo\\Model\\Resolver\\ItemResolver") @doc(description: "The products query searches for products that match the criteria specified in the search and filter attributes.") @cache(cacheIdentity: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\Identity")
    }

    type Brand {
        id:Int @doc(description: "Get Brand id")
        is_active: Int @doc (description: "Get Brand Status")
        name:String @doc(description: "Get Brand name")
        information: String @doc(description: "Get Brand Information")
    }

    type ProductsWithBrand {
        sku: String @doc(description: "Get Product sku")
        name: String @doc(description: "Get Product name")
        price: Float @doc(description: "Get Product price")
        brand: String @doc(description: "Get Product brand")
    }

    type Collections @doc(description: "The Products object is the top-level object returned in a product search.") {
        items: [ProductInterface] @doc(description: "An array of products that match the specified search criteria.")
    }

    interface ProductInterface  @doc(description: "The ProductInterface contains attributes that are common to all types of products. Note that descriptions may not be available for custom and EAV attributes.") {
        id: Int @deprecated(reason: "Use the `uid` field instead.") @doc(description: "The ID number assigned to the product.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\EntityIdToId")
        uid: ID! @doc(description: "The unique ID for a `ProductInterface` object.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\EntityIdToUid")
        name: String @doc(description: "The product name. Customers use this name to identify the product.")
        sku: String @doc(description: "A number or code assigned to a product to identify the product, options, price, and manufacturer.")
        description: ComplexTextValue @doc(description: "Detailed information about the product. The value can include simple HTML tags.") @resolver(class: "\\Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\ProductComplexTextAttribute")
        short_description: ComplexTextValue @doc(description: "A short description of the product. Its use depends on the theme.") @resolver(class: "\\Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\ProductComplexTextAttribute")
        special_price: Float @doc(description: "The discounted price of the product.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\SpecialPrice")
        special_from_date: String @deprecated(reason: "The field should not be used on the storefront.") @doc(description: "The beginning date that a product has a special price.")
        special_to_date: String @doc(description: "The end date that a product has a special price.")
        attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.") @doc(description: "The attribute set assigned to the product.")
        meta_title: String @doc(description: "A string that is displayed in the title bar and tab of the browser and in search results lists.")
        meta_keyword: String @doc(description: "A comma-separated list of keywords that are visible only to search engines.")
        meta_description: String @doc(description: "A brief overview of the product for search results listings, maximum 255 characters.")
        image: ProductImage @doc(description: "The relative path to the main image on the product page.")
        small_image: ProductImage @doc(description: "The relative path to the small image, which is used on catalog pages.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\ProductImage")
        thumbnail: ProductImage @doc(description: "The relative path to the product's thumbnail image.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\ProductImage")
        new_from_date: String @deprecated(reason: "The field should not be used on the storefront.") @doc(description: "The beginning date for new product listings, and determines if the product is featured as a new product.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\NewFromTo")
        new_to_date: String @deprecated(reason: "The field should not be used on the storefront.") @doc(description: "The end date for new product listings.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\NewFromTo")
        tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.") @doc(description: "The price when tier pricing is in effect and the items purchased threshold has been reached.")
        options_container: String @doc(description: "If the product has multiple options, determines where they appear on the product page.")
        created_at: String @deprecated(reason: "The field should not be used on the storefront.") @doc(description: "Timestamp indicating when the product was created.")
        updated_at: String @deprecated(reason: "The field should not be used on the storefront.") @doc(description: "Timestamp indicating when the product was updated.")
        country_of_manufacture: String @doc(description: "The product's country of origin.")
        websites: [Website] @doc(description: "An array of websites in which the product is available.") @deprecated(reason: "The field should not be used on the storefront.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\Websites")
        product_links: [ProductLinksInterface] @doc(description: "An array of ProductLinks objects.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\BatchProductLinks")
        media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead") @doc(description: "An array of MediaGalleryEntry objects.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\MediaGalleryEntries")
        price: ProductPrices @deprecated(reason: "Use price_range for product price information.") @doc(description: "A ProductPrices object, indicating the price of an item.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\Price")
        price_range: PriceRange! @doc(description: "A PriceRange object, indicating the range of prices for the product") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\PriceRange")
        gift_message_available: String @doc(description: "Indicates whether a gift message is available.")
        manufacturer: Int @doc(description: "A number representing the product's manufacturer.")
        categories: [CategoryInterface] @doc(description: "The categories assigned to a product.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Categories") @cache(cacheIdentity: "Magento\\CatalogGraphQl\\Model\\Resolver\\Category\\CategoriesIdentity")
        canonical_url: String @doc(description: "Relative canonical URL. This value is returned only if the system setting 'Use Canonical Link Meta Tag For Products' is enabled") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\CanonicalUrl")
        media_gallery: [MediaGalleryInterface] @doc(description: "An array of Media Gallery objects.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\MediaGallery")
    }

    type ProductImage @doc(description: "Contains basic information about a product image or video.") @typeResolver(class: "Magento\\CatalogGraphQl\\Model\\MediaGalleryTypeResolver") {
        url: String @doc(description: "The URL of the product image or video.") @resolver(class: "Magento\\CatalogGraphQl\\Model\\Resolver\\Product\\MediaGallery\\Url")
        label: String @doc(description: "The label of the product image or video.")
        position: Int @doc(description: "The media item's position after it has been sorted.")
        disabled: Boolean @doc(description: "Whether the image is hidden from view.")
    }
